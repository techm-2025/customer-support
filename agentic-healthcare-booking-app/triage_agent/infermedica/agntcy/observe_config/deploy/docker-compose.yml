version: '3.8'

services:
  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse
    hostname: clickhouse
    ports:
      - "8123:8123"   # HTTP interface
      - "9000:9000"   # Native TCP interface
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml:ro
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml:ro
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    restart: unless-stopped
    networks:
      - observability
    deploy:
      resources:
        limits:
          memory: ${CLICKHOUSE_MEMORY}
        reservations:
          memory: 2g

  # OTEL Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    hostname: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics endpoint
      - "13133:13133" # Health check endpoint
    environment:
      - GOMEMLIMIT=${OTEL_MEMORY}
      - CLICKHOUSE_ENDPOINT=tcp://clickhouse:9000
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
    volumes:
      - ./otel/otel-collector.yaml:/etc/otel-collector-config.yaml:ro
      - otel_logs:/var/log/otel
    depends_on:
      - clickhouse
    restart: unless-stopped
    networks:
      - observability
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:13133/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: ${OTEL_MEMORY}
        reservations:
          memory: 512m

  # Grafana
  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_FEATURE_TOGGLES_ENABLE=sqlExpressions
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_LOG_LEVEL=info
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - clickhouse
    restart: unless-stopped
    networks:
      - observability
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: ${GRAFANA_MEMORY}
        reservations:
          memory: 256m

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - grafana
      - otel-collector
    restart: unless-stopped
    networks:
      - observability
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: ${NGINX_MEMORY}
        reservations:
          memory: 128m

volumes:
  clickhouse_data:
    driver: local
  grafana_data:
    driver: local
  otel_logs:
    driver: local
  nginx_ssl:
    driver: local
  nginx_logs:
    driver: local

networks:
  observability:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16